/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei/useGLTF'

import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    hand_anatomy_man: THREE.SkinnedMesh
    root: THREE.Bone
    ['MCH-hand_ikparentL']: THREE.Bone
    ['MCH-upper_arm_ik_targetparentL']: THREE.Bone
  }
  materials: {
    Material: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF<GLTFResult>('/hand.glb')
  return (
    <group ref={group} {...props}>
      <group rotation={[0, 0.98, 0]} scale={[1.76, 1.76, 1.76]}>
        <group position={[0, 2.59, 0]} rotation={[0, 1.18, -Math.PI]} scale={[0.57, 0.57, 0.57]}>
          <primitive object={nodes.root} />
          <primitive object={nodes['MCH-hand_ikparentL']} />
          <primitive object={nodes['MCH-upper_arm_ik_targetparentL']} />
          <skinnedMesh
            material={materials.Material}
            geometry={nodes.hand_anatomy_man.geometry}
            skeleton={nodes.hand_anatomy_man.skeleton}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/hand.glb')
